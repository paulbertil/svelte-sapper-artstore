import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, f as claim_element, g as children, b as detach_dev, j as attr_dev, k as add_location, l as insert_dev, m as append_dev, n as noop, o as validate_each_argument, p as create_component, a as space, t as text, r as claim_component, c as claim_space, h as claim_text, u as mount_component, w as set_data_dev, x as transition_in, y as transition_out, z as destroy_component, q as query_selector_all, A as check_outros, B as destroy_each, C as group_outros } from './client.428738da.js';
import { I as Image } from './Image.706a1acd.js';

/* src/components/Cart.svelte generated by Svelte v3.29.4 */

const file = "src/components/Cart.svelte";

function create_fragment(ctx) {
	let div;
	let a;
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			div = element("div");
			a = element("a");
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			a = claim_element(div_nodes, "A", { href: true });
			var a_nodes = children(a);
			img = claim_element(a_nodes, "IMG", { src: true, alt: true });
			a_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "icons/cart.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "Go To Cart");
			add_location(img, file, 22, 18, 381);
			attr_dev(a, "href", "cart");
			add_location(a, file, 22, 2, 365);
			attr_dev(div, "class", "cart svelte-ipr4d3");
			add_location(div, file, 21, 0, 344);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, a);
			append_dev(a, img);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Cart", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Cart> was created with unknown prop '${key}'`);
	});

	return [];
}

class Cart extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Cart",
			options,
			id: create_fragment.name
		});
	}
}

/* src/routes/store/index.svelte generated by Svelte v3.29.4 */
const file$1 = "src/routes/store/index.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

// (50:2) {#each products as product}
function create_each_block(ctx) {
	let li;
	let image;
	let t0;
	let div;
	let t1;
	let a;
	let t2_value = /*product*/ ctx[1].title + "";
	let t2;
	let a_href_value;
	let t3;
	let current;

	image = new Image({
			props: {
				src: "https://strapi-mongodb-artstore.herokuapp.com" + /*product*/ ctx[1].image[0].url,
				alt: ""
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			li = element("li");
			create_component(image.$$.fragment);
			t0 = space();
			div = element("div");
			t1 = space();
			a = element("a");
			t2 = text(t2_value);
			t3 = space();
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			var li_nodes = children(li);
			claim_component(image.$$.fragment, li_nodes);
			t0 = claim_space(li_nodes);
			div = claim_element(li_nodes, "DIV", {});
			children(div).forEach(detach_dev);
			t1 = claim_space(li_nodes);
			a = claim_element(li_nodes, "A", { class: true, rel: true, href: true });
			var a_nodes = children(a);
			t2 = claim_text(a_nodes, t2_value);
			a_nodes.forEach(detach_dev);
			t3 = claim_space(li_nodes);
			li_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(div, file$1, 60, 6, 1291);
			attr_dev(a, "class", "link svelte-qecah2");
			attr_dev(a, "rel", "prefetch");
			attr_dev(a, "href", a_href_value = "store/" + /*product*/ ctx[1].slug);
			add_location(a, file$1, 61, 6, 1305);
			attr_dev(li, "class", "product-listing svelte-qecah2");
			add_location(li, file$1, 56, 4, 1143);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			mount_component(image, li, null);
			append_dev(li, t0);
			append_dev(li, div);
			append_dev(li, t1);
			append_dev(li, a);
			append_dev(a, t2);
			append_dev(li, t3);
			current = true;
		},
		p: function update(ctx, dirty) {
			const image_changes = {};
			if (dirty & /*products*/ 1) image_changes.src = "https://strapi-mongodb-artstore.herokuapp.com" + /*product*/ ctx[1].image[0].url;
			image.$set(image_changes);
			if ((!current || dirty & /*products*/ 1) && t2_value !== (t2_value = /*product*/ ctx[1].title + "")) set_data_dev(t2, t2_value);

			if (!current || dirty & /*products*/ 1 && a_href_value !== (a_href_value = "store/" + /*product*/ ctx[1].slug)) {
				attr_dev(a, "href", a_href_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(image.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(image.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
			destroy_component(image);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(50:2) {#each products as product}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let t0;
	let h1;
	let t1;
	let t2;
	let ul;
	let cart;
	let t3;
	let current;
	cart = new Cart({ $$inline: true });
	let each_value = /*products*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			t1 = text("Shop");
			t2 = space();
			ul = element("ul");
			create_component(cart.$$.fragment);
			t3 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-107h000\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			h1 = claim_element(nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Shop");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			ul = claim_element(nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			claim_component(cart.$$.fragment, ul_nodes);
			t3 = claim_space(ul_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Store";
			attr_dev(h1, "class", "heading-primary");
			add_location(h1, file$1, 44, 0, 776);
			attr_dev(ul, "class", "product-listings svelte-qecah2");
			add_location(ul, file$1, 46, 0, 815);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, h1, anchor);
			append_dev(h1, t1);
			insert_dev(target, t2, anchor);
			insert_dev(target, ul, anchor);
			mount_component(cart, ul, null);
			append_dev(ul, t3);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*products*/ 1) {
				each_value = /*products*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(ul, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(cart.$$.fragment, local);

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			transition_out(cart.$$.fragment, local);
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(ul);
			destroy_component(cart);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload() {
	const result = await this.fetch("https://strapi-mongodb-artstore.herokuapp.com/Products");
	const data = await result.json();
	return { products: data };
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Store", slots, []);
	let { products } = $$props;
	const writable_props = ["products"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Store> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("products" in $$props) $$invalidate(0, products = $$props.products);
	};

	$$self.$capture_state = () => ({ preload, Cart, Image, products });

	$$self.$inject_state = $$props => {
		if ("products" in $$props) $$invalidate(0, products = $$props.products);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [products];
}

class Store extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { products: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Store",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*products*/ ctx[0] === undefined && !("products" in props)) {
			console.warn("<Store> was created without expected prop 'products'");
		}
	}

	get products() {
		throw new Error("<Store>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set products(value) {
		throw new Error("<Store>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Store;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguOTY4YTIwNGEuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvc3RvcmUvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuICBleHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlbG9hZCgpIHtcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmZldGNoKFxuICAgICAgJ2h0dHBzOi8vc3RyYXBpLW1vbmdvZGItYXJ0c3RvcmUuaGVyb2t1YXBwLmNvbS9Qcm9kdWN0cydcbiAgICApO1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXN1bHQuanNvbigpO1xuICAgIHJldHVybiB7IHByb2R1Y3RzOiBkYXRhIH07XG4gIH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuICBpbXBvcnQgQ2FydCBmcm9tICcuLi8uLi9jb21wb25lbnRzL0NhcnQuc3ZlbHRlJztcbiAgaW1wb3J0IEltYWdlIGZyb20gJ3N2ZWx0ZS1pbWFnZSc7XG5cbiAgZXhwb3J0IGxldCBwcm9kdWN0cztcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG4gIHVsIHtcbiAgICBtYXJnaW46IDAgMCAxZW0gMDtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgfVxuXG4gIC5wcm9kdWN0LWxpc3RpbmdzIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDI1MHB4LCAxZnIpKTtcbiAgICBnYXA6IDJyZW07XG4gIH1cblxuICAucHJvZHVjdC1saXN0aW5nIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5saW5rIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPlN0b3JlPC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxoMSBjbGFzcz1cImhlYWRpbmctcHJpbWFyeVwiPlNob3A8L2gxPlxuXG48dWwgY2xhc3M9XCJwcm9kdWN0LWxpc3RpbmdzXCI+XG4gIDxDYXJ0IC8+XG5cbiAgeyNlYWNoIHByb2R1Y3RzIGFzIHByb2R1Y3R9XG4gICAgPCEtLSB3ZSdyZSB1c2luZyB0aGUgbm9uLXN0YW5kYXJkIGByZWw9cHJlZmV0Y2hgIGF0dHJpYnV0ZSB0b1xuXHRcdFx0XHR0ZWxsIFNhcHBlciB0byBsb2FkIHRoZSBkYXRhIGZvciB0aGUgcGFnZSBhcyBzb29uIGFzXG5cdFx0XHRcdHRoZSB1c2VyIGhvdmVycyBvdmVyIHRoZSBsaW5rIG9yIHRhcHMgaXQsIGluc3RlYWQgb2ZcbiAgICAgICAgd2FpdGluZyBmb3IgdGhlICdjbGljaycgZXZlbnQgLS0+XG5cbiAgICA8IS0tIFByb2R1Y3QgbGlzdGluZyAtLT5cbiAgICA8bGkgY2xhc3M9XCJwcm9kdWN0LWxpc3RpbmdcIj5cbiAgICAgIDxJbWFnZVxuICAgICAgICBzcmM9XCJodHRwczovL3N0cmFwaS1tb25nb2RiLWFydHN0b3JlLmhlcm9rdWFwcC5jb217cHJvZHVjdC5pbWFnZVswXS51cmx9XCJcbiAgICAgICAgYWx0PVwiXCIgLz5cbiAgICAgIDxkaXYgLz5cbiAgICAgIDxhXG4gICAgICAgIGNsYXNzPVwibGlua1wiXG4gICAgICAgIHJlbD1cInByZWZldGNoXCJcbiAgICAgICAgaHJlZj1cInN0b3JlL3twcm9kdWN0LnNsdWd9XCI+e3Byb2R1Y3QudGl0bGV9PC9hPlxuICAgIDwvbGk+XG4gIHsvZWFjaH1cbjwvdWw+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0QkFnRXFDLEdBQU8sSUFBQyxLQUFLOzs7Ozs7Ozt1RUFOUyxHQUFPLElBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2REFNMUQsR0FBTyxJQUFDLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7OztpSEFOMEIsR0FBTyxJQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsR0FBRzs7b0ZBTTFDLEdBQU8sSUFBQyxLQUFLOztxR0FBN0IsR0FBTyxJQUFDLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBZnhCLEdBQVE7Ozs7Z0NBQWIsTUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhCQUFDLEdBQVE7Ozs7K0JBQWIsTUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFBSixNQUFJOzs7Ozs7Ozs7OztrQ0FBSixNQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBaERnQixPQUFPO09BQ3JCLE1BQU0sU0FBUyxJQUFJLENBQUMsS0FBSyxDQUM3Qix3REFBd0Q7T0FFcEQsSUFBSSxTQUFTLE1BQU0sQ0FBQyxJQUFJO1VBQ3JCLFFBQVEsRUFBRSxJQUFJOzs7Ozs7T0FRZCxRQUFROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
