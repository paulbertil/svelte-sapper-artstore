import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, K as onMount, L as globals, e as element, a as space, t as text, q as query_selector_all, f as claim_element, g as children, b as detach_dev, c as claim_space, h as claim_text, j as attr_dev, k as add_location, m as append_dev, l as insert_dev, M as listen_dev, n as noop } from './client.428738da.js';

/* src/routes/cart/index.svelte generated by Svelte v3.29.4 */

const { console: console_1 } = globals;
const file = "src/routes/cart/index.svelte";

function create_fragment(ctx) {
	let script;
	let script_src_value;
	let t0;
	let h1;
	let t1;
	let t2;
	let p;
	let t3;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			script = element("script");
			t0 = space();
			h1 = element("h1");
			t1 = text("Dear Visitor");
			t2 = space();
			p = element("p");
			t3 = text("This is the 'cart' page. There's not much here yet.");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-15ct9k6\"]", document.head);
			script = claim_element(head_nodes, "SCRIPT", { src: true });
			var script_nodes = children(script);
			script_nodes.forEach(detach_dev);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			h1 = claim_element(nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Dear Visitor");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			p = claim_element(nodes, "P", {});
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, "This is the 'cart' page. There's not much here yet.");
			p_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Cart";
			if (script.src !== (script_src_value = "https://js.stripe.com/v3/")) attr_dev(script, "src", script_src_value);
			add_location(script, file, 47, 2, 969);
			add_location(h1, file, 51, 0, 1061);
			add_location(p, file, 52, 0, 1083);
		},
		m: function mount(target, anchor) {
			append_dev(document.head, script);
			insert_dev(target, t0, anchor);
			insert_dev(target, h1, anchor);
			append_dev(h1, t1);
			insert_dev(target, t2, anchor);
			insert_dev(target, p, anchor);
			append_dev(p, t3);

			if (!mounted) {
				dispose = listen_dev(script, "load", /*stripeLoaded*/ ctx[0], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			detach_dev(script);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(p);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function loadStripeElements() {
	const stripe = new Stripe("pk_test_rdW6s8iBpSDJYI7aeUVkFtfY00iYnnPo7R");
	var elements = stripe.elements();
	console.log(elements);
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Cart", slots, []);
	let stripeReady = false;
	let mounted = false;

	onMount(() => {
		mounted = true;
		console.log("hi");

		if (stripeReady) {
			loadStripeElements();
		}
	});

	const stripeLoaded = () => {
		stripeReady = true;

		if (mounted) {
			loadStripeElements();
		}
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Cart> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		onMount,
		stripeReady,
		mounted,
		stripeLoaded,
		loadStripeElements
	});

	$$self.$inject_state = $$props => {
		if ("stripeReady" in $$props) stripeReady = $$props.stripeReady;
		if ("mounted" in $$props) mounted = $$props.mounted;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [stripeLoaded];
}

class Cart extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Cart",
			options,
			id: create_fragment.name
		});
	}
}

export default Cart;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguOTUzYzhmOGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvY2FydC9pbmRleC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cbiAgaW1wb3J0IHsgb25Nb3VudCB9IGZyb20gJ3N2ZWx0ZSc7XG5cbiAgbGV0IHN0cmlwZVJlYWR5ID0gZmFsc2U7XG4gIGxldCBtb3VudGVkID0gZmFsc2U7XG5cbiAgb25Nb3VudCgoKSA9PiB7XG4gICAgbW91bnRlZCA9IHRydWU7XG4gICAgY29uc29sZS5sb2coJ2hpJyk7XG4gICAgaWYgKHN0cmlwZVJlYWR5KSB7XG4gICAgICBsb2FkU3RyaXBlRWxlbWVudHMoKTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IHN0cmlwZUxvYWRlZCA9ICgpID0+IHtcbiAgICBzdHJpcGVSZWFkeSA9IHRydWU7XG4gICAgaWYgKG1vdW50ZWQpIHtcbiAgICAgIGxvYWRTdHJpcGVFbGVtZW50cygpO1xuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiBsb2FkU3RyaXBlRWxlbWVudHMoKSB7XG4gICAgY29uc3Qgc3RyaXBlID0gbmV3IFN0cmlwZSgncGtfdGVzdF9yZFc2czhpQnBTREpZSTdhZVVWa0Z0ZlkwMGlZbm5QbzdSJyk7XG4gICAgdmFyIGVsZW1lbnRzID0gc3RyaXBlLmVsZW1lbnRzKCk7XG5cbiAgICBjb25zb2xlLmxvZyhlbGVtZW50cyk7XG4gICAgdmFyIHN0eWxlID0ge1xuICAgICAgYmFzZToge1xuICAgICAgICBwYWRkaW5nOiAnMTBweCAxMnB4JyxcbiAgICAgICAgY29sb3I6ICcjMzIzMjVkJyxcbiAgICAgICAgZm9udEZhbWlseTpcbiAgICAgICAgICAnLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNlZ29lIFVJXCIsIFJvYm90bywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZicsXG4gICAgICAgIGZvbnRTbW9vdGhpbmc6ICdhbnRpYWxpYXNlZCcsXG4gICAgICAgIGZvbnRTaXplOiAnMTZweCcsXG4gICAgICAgICc6OnBsYWNlaG9sZGVyJzoge1xuICAgICAgICAgIGNvbG9yOiAnI2FhYjdjNCcsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgaW52YWxpZDoge1xuICAgICAgICBjb2xvcjogJyNmYTc1NWEnLFxuICAgICAgfSxcbiAgICB9O1xuICB9XG48L3NjcmlwdD5cblxuPHN2ZWx0ZTpoZWFkPlxuICA8dGl0bGU+Q2FydDwvdGl0bGU+XG4gIDxzY3JpcHQgc3JjPVwiaHR0cHM6Ly9qcy5zdHJpcGUuY29tL3YzL1wiIG9uOmxvYWQ9e3N0cmlwZUxvYWRlZH0+XG4gIDwvc2NyaXB0PlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPkRlYXIgVmlzaXRvcjwvaDE+XG48cD5UaGlzIGlzIHRoZSAnY2FydCcgcGFnZS4gVGhlcmUncyBub3QgbXVjaCBoZXJlIHlldC48L3A+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MERBK0NtRCxHQUFZOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztTQTFCcEQsa0JBQWtCO09BQ25CLE1BQU0sT0FBTyxNQUFNLENBQUMsNENBQTRDO0tBQ2xFLFFBQVEsR0FBRyxNQUFNLENBQUMsUUFBUTtDQUU5QixPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVE7Ozs7OztLQXRCbEIsV0FBVyxHQUFHLEtBQUs7S0FDbkIsT0FBTyxHQUFHLEtBQUs7O0NBRW5CLE9BQU87RUFDTCxPQUFPLEdBQUcsSUFBSTtFQUNkLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSTs7TUFDWixXQUFXO0dBQ2Isa0JBQWtCOzs7O09BSWhCLFlBQVk7RUFDaEIsV0FBVyxHQUFHLElBQUk7O01BQ2QsT0FBTztHQUNULGtCQUFrQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
